// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Hamwi.Shared;

namespace Hamwi.Shared.Migrations
{
    [DbContext(typeof(HamwiContext))]
    [Migration("20210620211132_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hamwi.Shared.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoverPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("StatusCount")
                        .HasColumnType("decimal(38,0)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Hamwi.Shared.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpenedCount")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal>("ReceivedCount")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Hamwi.Shared.Entities.Statuses.Base.StatusBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DownloadsCount")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal>("LikesCount")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal>("SharesCount")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal>("ViewsCount")
                        .HasColumnType("decimal(38,0)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Status");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StatusBase");
                });

            modelBuilder.Entity("Hamwi.Shared.Entities.Statuses.Image", b =>
                {
                    b.HasBaseType("Hamwi.Shared.Entities.Statuses.Base.StatusBase");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Status");

                    b.HasDiscriminator().HasValue("Image");
                });

            modelBuilder.Entity("Hamwi.Shared.Entities.Statuses.Quote", b =>
                {
                    b.HasBaseType("Hamwi.Shared.Entities.Statuses.Base.StatusBase");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Status");

                    b.HasDiscriminator().HasValue("Quote");
                });

            modelBuilder.Entity("Hamwi.Shared.Entities.Statuses.Video", b =>
                {
                    b.HasBaseType("Hamwi.Shared.Entities.Statuses.Base.StatusBase");

                    b.Property<string>("CoverPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Status");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("Hamwi.Shared.Entities.Statuses.Base.StatusBase", b =>
                {
                    b.HasOne("Hamwi.Shared.Entities.Category", "Category")
                        .WithMany("Statuses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Hamwi.Shared.Entities.Category", b =>
                {
                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
